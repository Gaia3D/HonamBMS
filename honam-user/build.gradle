buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
        lombokVersion = '1.18.4'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

war {
	baseName = 'honam-user'
	version = '0.0.1-SNAPSHOT'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
compileJava.options.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

test {
	//ignoreFailures = true
    exclude '**/*'
}

dependencies {
	implementation project(':honam-common')

	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	implementation('org.springframework.security:spring-security-core')
	implementation('org.springframework.boot:spring-boot-starter-aop')

	implementation('org.springframework.boot:spring-boot-starter-jta-atomikos')
	implementation('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.1')

	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('org.postgresql:postgresql')
	runtimeOnly('org.zenframework.z8.dependencies.commons:ojdbc6:2.0')
	runtimeOnly('org.mariadb.jdbc:mariadb-java-client:1.7.4')

    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
	compileOnly("org.projectlombok:lombok:$lombokVersion")
	testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
	testCompileOnly("org.projectlombok:lombok:$lombokVersion")

	testImplementation('org.springframework.boot:spring-boot-starter-test')

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}
